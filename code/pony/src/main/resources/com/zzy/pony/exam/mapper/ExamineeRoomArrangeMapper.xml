<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zzy.pony.exam.mapper.ExamineeRoomArrangeMapper">
	
	<delete id="deleteByExamId" parameterType="int">
		delete from t_examinee_room_arrange 
		where examinee_id in (select examinee_id from t_examinee where exam_id = #{0}); 		
	</delete>
	
	<select id="findExamineeRoomArrangeByClassId" resultType="com.zzy.pony.vo.ExamineeRoomArrangeVo">
		select t.id as id ,t.SEQ as seq,b.STUDENT_ID as studentId,
		b.`NAME` as studentName,a.REG_NO as regNo,a.SEAT_NO as seatNo,
		c.CLASS_ID as classId,CONCAT(d.name,convert(c.SEQ,char),'班')  as className ,
		e.ROOM_ID as roomId,e.ROOM_NAME as roomName,
		e.CAPACITY as capacity,
		g.name as subjectName,
		f.ARRANGE_ID as arrangeId,
		f.group_id as groupId,
		b.STUDENT_NO as studentNo			 
		from t_examinee_room_arrange t left join t_examinee a on t.EXAMINEE_ID=a.EXAMINEE_ID 
		left join t_student b on a.student_id = b.student_id 
		left join t_school_class c on b.class_id = c.class_id
		left join t_grade d on c.GRADE_ID=d.GRADE_ID
		left join t_exam_room_allocate e on t.ROOM_ID = e.ROOM_ID
		left join t_exam_arrange f on e.arrange_id = f.arrange_id 
		left join t_subject g on f.subject_id = g.subject_id
		where c.CLASS_ID = #{0} 
		and a.EXAM_ID = #{1}
		order by  b.student_no;	
	</select>
	
	<select id="findExamineeRoomArrangeByRoomId" resultType="com.zzy.pony.vo.ExamineeRoomArrangeVo">
		select t.id as id ,t.SEQ as seq,b.STUDENT_ID as studentId,
		b.`NAME` as studentName,a.REG_NO as regNo,a.SEAT_NO as seatNo,
		c.CLASS_ID as classId,CONCAT(d.name,convert(c.SEQ,char),'班')  as className ,
		e.ROOM_ID as roomId,e.ROOM_NAME as roomName,
		e.CAPACITY as capacity,
		g.name as subjectName,
		f.ARRANGE_ID as arrangeId,
		f.group_id as groupId,
		b.STUDENT_NO as studentNo			 
		from t_examinee_room_arrange t left join t_examinee a on t.EXAMINEE_ID=a.EXAMINEE_ID 
		left join t_student b on a.student_id = b.student_id 
		left join t_school_class c on b.class_id = c.class_id
		left join t_grade d on c.GRADE_ID=d.GRADE_ID
		left join t_exam_room_allocate e on t.ROOM_ID = e.ROOM_ID
		left join t_exam_arrange f on e.arrange_id = f.arrange_id 
		left join t_subject g on f.subject_id = g.subject_id
		where e.room_name = #{0}
		and a.EXAM_ID = #{1}
		order by t.seq;
	
	</select>
	
	<select id="findExamineeRoomArrangeBySubjectId" resultType="com.zzy.pony.vo.ExamineeRoomArrangeVo">
	select t.id as id ,t.SEQ as seq,b.STUDENT_ID as studentId,
		b.`NAME` as studentName,a.REG_NO as regNo,a.SEAT_NO as seatNo,
		c.CLASS_ID as classId,CONCAT(d.name,convert(c.SEQ,char),'班')  as className ,
		e.ROOM_ID as roomId,e.ROOM_NAME as roomName,
		e.CAPACITY as capacity,
		g.name as subjectName,
		f.ARRANGE_ID as arrangeId,
		f.group_id as groupId,
		b.STUDENT_NO as studentNo			 
		from t_examinee_room_arrange t left join t_examinee a on t.EXAMINEE_ID=a.EXAMINEE_ID 
		left join t_student b on a.student_id = b.student_id 
		left join t_school_class c on b.class_id = c.class_id
		left join t_grade d on c.GRADE_ID=d.GRADE_ID
		left join t_exam_room_allocate e on t.ROOM_ID = e.ROOM_ID
		left join t_exam_arrange f on e.arrange_id = f.arrange_id 
		left join t_subject g on f.subject_id = g.subject_id
		where f.SUBJECT_ID = #{0}
		and  a.EXAM_ID = #{1}
		order by  e.ROOM_SEQ, t.seq;
	
	</select>
	<insert id="insertExamineeRoomArrange" parameterType="com.zzy.pony.vo.ExamineeRoomArrangeVo" useGeneratedKeys="true" keyProperty="id">
		insert into t_examinee_room_arrange(room_id,examinee_id,seq) values(#{roomId},#{examineeId},#{seq})
	</insert>

	<insert id="insertBatchExamineeRoomArrang" parameterType="java.util.List" useGeneratedKeys="true" >
		insert into t_examinee_room_arrange(room_id,examinee_id,seq)
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.roomId},#{item.examineeId},#{item.seq})
		</foreach>
	</insert>

	
	
	
</mapper>