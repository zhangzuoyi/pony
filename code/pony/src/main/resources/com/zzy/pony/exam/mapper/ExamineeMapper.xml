<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zzy.pony.exam.mapper.ExamineeMapper">
	<sql id="base_select">
		select t.EXAMINEE_ID as examineeId,t.EXAM_ID as examId,t.STUDENT_ID as studentId,t.REG_NO as regNo,
		a.`NAME` as name,c.value as sex,a.STUDENT_NO as studentNo from t_examinee t 
		left join t_student a on t.STUDENT_ID = a.STUDENT_ID
		left join t_examinee_arrange b on t.examinee_id = b.examinee_id
		left join t_common_dict c on c.dict_type='sex' and c.code=a.sex 
	</sql>
	<sql id="base_select2">
		select t.EXAMINEE_ID as examineeId,t.EXAM_ID as examId,t.STUDENT_ID as studentId,t.REG_NO as regNo,
		a.`NAME` as name,c.value as sex,a.STUDENT_NO as studentNo,a.exam_subjects as examSubjects,
		CONCAT(convert(b.SEQ,char),'Áè≠') className from t_examinee t 
		left join t_student a on t.STUDENT_ID = a.STUDENT_ID left join t_school_class b on a.class_id=b.CLASS_ID 
		left join t_common_dict c on c.dict_type='sex' and c.code=a.sex 
	</sql>
	<select id="findPageByClass" resultType="com.zzy.pony.exam.vo.ExamineeVo">
		<include refid="base_select2"></include>
		 where a.class_id=#{3} and t.EXAM_ID=#{2} limit #{0},#{1}
	</select>
	<select id="findByClass" resultType="com.zzy.pony.exam.vo.ExamineeVo">
		<include refid="base_select2"></include>
		 where a.class_id=#{1} and t.EXAM_ID=#{0} 
	</select>
	<select id="findCountByClass" resultType="int">
		select count(1) from 
		(<include refid="base_select2"></include>
		 where a.class_id=#{1} and t.EXAM_ID=#{0}) t 
	</select>		
	
	<select id="findPageByClassAndArrange" resultType="com.zzy.pony.exam.vo.ExamineeVo">
		<include refid="base_select"></include>
		 where a.class_id=#{3} and t.EXAM_ID=#{2} and b.arrange_id = #{4} limit #{0},#{1}
	</select>
	<select id="findCountByClassAndArrange" resultType="int">
		select count(1) from 
		(<include refid="base_select"></include>
		 where a.class_id=#{1} and t.EXAM_ID=#{0} and b.arrange_id = #{2}) t 
	</select>
	
	<select id="findByExamIdAndClassId" resultType="com.zzy.pony.exam.model.Examinee">
		select t.EXAMINEE_ID as examineeId,t.EXAM_ID as examId,t.STUDENT_ID as studentId,t.REG_NO as regNo,
		a.`NAME` as name,a.SEX as sex,a.STUDENT_NO as studentNo from t_examinee t 
		left join t_student a on t.STUDENT_ID = a.STUDENT_ID
		 where a.class_id=#{1} and t.EXAM_ID=#{0} 
	</select>
	
	<select id="findByExamIdAndClassIds" resultType="com.zzy.pony.exam.model.Examinee">
		select t.EXAMINEE_ID as examineeId,t.EXAM_ID as examId,t.STUDENT_ID as studentId,t.REG_NO as regNo,
		a.`NAME` as name,a.SEX as sex,a.STUDENT_NO as studentNo from t_examinee t 
		left join t_student a on t.STUDENT_ID = a.STUDENT_ID
		 where   t.EXAM_ID=#{0}   
		 <if test="classIds != null">
		 	and  a.CLASS_ID in  
     		<foreach item="item" index="index" collection="classIds" open="(" separator="," close=")">  
     		 #{item}  
     		</foreach> 
		</if> 
		 
	</select>
	
	<select id="findByArrangeId" resultType="com.zzy.pony.exam.model.Examinee">
		<include refid="base_select"></include>
		 where  b.arrange_id = #{0} 
	</select>

	<select id="findRankByExam" resultType="com.zzy.pony.vo.RankVo">
		SELECT
	t.student_id AS studentId,
	a.`NAME` AS studentName,
	b.SEQ AS seq,
	d. NAME AS subjectName,
	c.SCORE AS subjectScore,
	c.CLASS_RANK AS subjectClassRank,
	c.GRADE_RANK AS subjectGradeRank,
	t.TOTAL_SCORE AS totalScore,
	t.CLASS_RANK AS classRank,
	t.GRADE_RANK AS gradeRank
FROM
	t_examinee t
LEFT JOIN t_student a ON t.STUDENT_ID = a.STUDENT_ID
LEFT JOIN t_school_class b ON a.CLASS_ID = b.CLASS_ID
LEFT JOIN t_exam_result c ON t.exam_id = c.exam_id
AND t.student_id = c.student_id
LEFT JOIN t_subject d ON c.SUBJECT_ID = d.SUBJECT_ID
where t.exam_id = #{0} and b.year_id = #{1} and b.grade_id = #{2}
order by t.grade_rank
	</select>
	<delete id="deleteExamineeArrangeByClass" >
		delete from t_examinee_arrange where arrange_id=#{1} and examinee_id in
		(select ee.examinee_id from t_examinee ee left join t_student u on ee.student_id=u.student_id 
		where u.class_id in 
		<foreach item="item" index="index" collection="classIds" open="(" separator="," close=")">  
     		 #{item}  
     	</foreach>
		 and ee.exam_id=#{0})
	</delete>
	<insert id="insertExamineeArrangeByClass" >
		insert into t_examinee_arrange (arrange_id,examinee_id) 
		select #{1},ee.examinee_id from t_examinee ee left join t_student u on ee.student_id=u.student_id 
		where ee.exam_id=#{0} and u.class_id in 
		<foreach item="item" index="index" collection="classIds" open="(" separator="," close=")">  
     		 #{item}  
     	</foreach>
	</insert>
	<insert id="insertExamineeArrangeByExaminee" >
		insert into t_examinee_arrange (arrange_id,examinee_id) 
		SELECT #{0}, #{1} FROM dual 
        WHERE not exists (select 1 from t_examinee_arrange t where t.arrange_id = #{0} and t.examinee_id=#{1})
	</insert>
	<delete id="deleteExamineeArrangeByArrangeId" >
		delete from t_examinee_arrange where arrange_id=#{0}
	</delete>

	<select id="findVoByArrangeId" resultType="com.zzy.pony.exam.vo.ExamineeVo">
	SELECT
	t.EXAMINEE_ID AS examineeId,
	t.EXAM_ID AS examId,
	t.STUDENT_ID AS studentId,
	t.REG_NO AS regNo,
	t.TOTAL_SCORE AS totalScore,
	t.CLASS_RANK AS classRank,
	t.GRADE_RANK AS gradeRank,
	a.CLASS_ID as classId
	FROM
	t_examinee t left join t_student a on a.STUDENT_ID = t.STUDENT_ID
	left join t_school_class b on a.CLASS_ID = b.CLASS_ID
	left join t_examinee_arrange c on t.examinee_id = c.examinee_id
	where
	c.arrange_id = #{0} and b.year_id = #{1}
	order by t.grade_rank
	</select>
	<select id="findByExamIdAndSubjects" resultType="com.zzy.pony.exam.vo.ExamineeVo">
		<include refid="base_select2"></include>
		 where t.EXAM_ID=#{0} and 
		 <foreach item="item" index="index" collection="subjects" open="" separator="and" close="">  
     		find_in_set(#{item}, a.exam_subjects)
     	 </foreach>
	</select>
	<select id="findByExam" resultType="com.zzy.pony.exam.vo.ExamineeVo">
		<include refid="base_select2"></include>
		 where t.EXAM_ID=#{0} 
	</select>

</mapper>